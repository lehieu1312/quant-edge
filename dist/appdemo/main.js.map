{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\ntd {\\r\\n    border-bottom-color: rgba(0, 0, 0, .12);\\r\\n}\\r\\n\\r\\n#body-content {\\r\\n    width: 690px;\\r\\n    height: auto;\\r\\n    margin: 0 auto;\\r\\n    border-right: 8px solid #3a38381f;\\r\\n    border-left: 8px solid #3a38381f;\\r\\n    font-size: 13px;\\r\\n    font-family: 'Roboto', sans-serif;\\r\\n}\\r\\n\\r\\n.color-header {\\r\\n    color: #cbcbcb;\\r\\n    font-weight: 500;\\r\\n    font-size: 13px;\\r\\n    border-bottom-color: rgba(0, 0, 0, .12);\\r\\n}\\r\\n\\r\\n.code-transaction {\\r\\n    color: #0971d8;\\r\\n}\\r\\n\\r\\n.company-transaction {\\r\\n    color: #a1a1a1;\\r\\n}\\r\\n\\r\\n.value-transaction {\\r\\n    color: #141414;\\r\\n}\\r\\n\\r\\n.font-color-green {\\r\\n    color: #6ae5a2;\\r\\n}\\r\\n\\r\\n.font-color-red {\\r\\n    color: #ff6687;\\r\\n}\\r\\n\\r\\n.text-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.text-left {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\napp-tabs {\\r\\n    width: 300px;\\r\\n}\"","module.exports = \"<div id=\\\"body-content\\\">\\r\\n    <mat-tab-group>\\r\\n        <!-- Tab Top 20 bản ghi có value lớn nhất -->\\r\\n        <mat-tab label=\\\"TOP GAINERS\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSourceGainer\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <ng-container matColumnDef=\\\"code\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-left\\\" width=\\\"13%\\\"> Code</th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"code-transaction text-left\\\"> {{element.code}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"company\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-left\\\" width=\\\"18%\\\"> Company </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"company-transaction text-left\\\"> {{element.company | uppercase}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"price\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-right\\\" width=\\\"15%\\\"> Price </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"value-transaction text-right\\\"> {{element.price |number:'1.2-2'}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"value\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-right\\\" width=\\\"15%\\\"> Value </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"value-transaction text-right\\\"> {{element.price*element.volume |number:'1.0-0' }} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"change\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-right\\\" width=\\\"15%\\\"> Change </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-right\\\" [ngClass]=\\\"element.statusUp>0 ? 'font-color-green' : element.statusUp<0 ?'font-color-red':''\\\"> {{element.change==0?'--':element.change |number:'1.2-2' }} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"%change\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-right\\\" width=\\\"15%\\\"> %Change </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-right\\\" [ngClass]=\\\"element.statusUp>0 ? 'font-color-green' : element.statusUp<0 ?'font-color-red':''\\\"> {{ element.perChange==0?'0': element.perChange |number:'1.2-2' }} {{element.perChange==0?'':'%'}}</td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n        </mat-tab>\\r\\n        <!-- Close tab Gainers -->\\r\\n\\r\\n        <!-- Tab Top 20 bản ghi có value nhỏ nhất -->\\r\\n        <mat-tab label=\\\"TOP LOSERS\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSourceLoser\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <ng-container matColumnDef=\\\"code\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-left\\\" width=\\\"13%\\\"> Code</th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"code-transaction text-left\\\"> {{element.code}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"company\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-left\\\" width=\\\"18%\\\"> Company </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"company-transaction text-left\\\"> {{element.company | uppercase}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"price\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-right\\\" width=\\\"15%\\\"> Price </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"value-transaction text-right\\\"> {{element.price |number:'1.2-2'}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"value\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-right\\\" width=\\\"15%\\\"> Value </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"value-transaction text-right\\\"> {{element.price*element.volume |number:'1.0-0' }} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"change\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-right\\\" width=\\\"15%\\\"> Change </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-right\\\" [ngClass]=\\\"element.statusUp>0 ? 'font-color-green' : element.statusUp<0 ?'font-color-red':''\\\"> {{element.change==0?'--':element.change |number:'1.2-2' }} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"%change\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"color-header text-right\\\" width=\\\"15%\\\"> %Change </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-right\\\" [ngClass]=\\\"element.statusUp>0 ? 'font-color-green' : element.statusUp<0 ?'font-color-red':''\\\"> {{ element.perChange==0?'0': element.perChange |number:'1.2-2' }} {{element.perChange==0?'':'%'}}</td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n        </mat-tab>\\r\\n        <!-- Close tab Losers -->\\r\\n    </mat-tab-group>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './data.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'App demo';\n  data: any;\n  // Định danh các cột cho table\n  displayedColumns: string[] = ['code', 'company', 'price', 'value', 'change', '%change'];\n  dataSourceGainer: any;\n  dataSourceLoser: any;\n\n  constructor(private api: DataService) {\n\n    // Lấy dữ liệu và xử lý dữ liệu từ api trả về\n    this.api.getData().subscribe(res => {\n      this.data = res.dataTransaction;\n      // Sắp xếp ghi có value = price*volume lớn nhất\n      this.dataSourceGainer = this.data.sort((a, b) => a.price * a.volume > b.price * b.volume ? -1 : 1);\n      // Lấy 20 bản ghi có value lớn nhất\n      this.dataSourceGainer = this.dataSourceGainer.slice(0, 20);\n      // Sắp xếp  bản ghi có value = price*volume nhỏ nhất\n      this.dataSourceLoser = this.data.sort((a, b) => a.price * a.volume > b.price * b.volume ? 1 : -1);\n      // Lấy 20 bản ghi có value nhỏ nhất\n      this.dataSourceLoser = this.dataSourceLoser.slice(0, 20);\n      // Hàm set thời gian sau 5s sẽ tự động thay đổi giá và volume để hiện thị lên table\n      setInterval(() => {\n        this.mathData();\n      }, 5000);\n    });\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  // Hàm lấy ngẫu nhiên giá trong khoảng từ -5% -> +5% của giá hiện tại\n  randomPrice(fPrice: number): number {\n    const fivePercent = 5 * fPrice / 100;\n    const vValue = Math.random() * (fivePercent - (-fivePercent)) + (-fivePercent);\n    return vValue;\n  }\n\n  // Hàm thay đổi giá và khối lượng, sau đó sẽ tính lại giá thay đổi và % giá đã thay đổi cũng như value của các bản ghi\n  mathData() {\n\n    for (let i = 0; i < this.data.length; i++) {\n      // Tăng volume ngẫu nhiên trong khoảng từ 10->30\n      this.data[i].volume = this.data[i].volume + Math.random() * (30 - 10) + 10;\n      // Thay đổi giá từ hàm cho trước\n      const priceChange = this.randomPrice(this.data[i].price);\n      this.data[i].price = this.data[i].price + priceChange;\n      // Tính giá thay đổi so với giá tham chiếu ban đầu\n      const differencePrice = this.data[i].price - this.data[i].referPrice;\n      this.data[i].change = differencePrice;\n      // Tính phần trăm giá thay đổi so với giá tham chiếu ban đầu\n      this.data[i].perChange = differencePrice * 100 / this.data[i].referPrice;\n\n      // Check trạng thái của bản ghi thay đổi theo chiều tăng, giảm hoặc không\n      if (differencePrice < 0) {\n        this.data[i].statusUp = -1;\n      } else if (differencePrice > 0) {\n        this.data[i].statusUp = 1;\n      } else {\n        this.data[i].statusUp = 0;\n      }\n    }\n    // Sắp xếp các bản ghi giảm dần sau khi dữ liệu thay đổi\n    this.dataSourceGainer = this.data.sort((a, b) => a.price * a.volume > b.price * b.volume ? -1 : 1);\n    // Lấy top 20 bản ghi có value cao nhất\n    this.dataSourceGainer = this.dataSourceGainer.slice(0, 20);\n    // Sắp xếp các bản ghi tăng dần sau khi dữ liệu thay đổi\n    this.dataSourceLoser = this.data.sort((a, b) => a.price * a.volume > b.price * b.volume ? 1 : -1);\n    // Lấy top 20 bản ghi có value nhỏ nhất\n    this.dataSourceLoser = this.dataSourceLoser.slice(0, 20);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport {\n  MatTableModule,\n  MatTabsModule\n\n} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { DataService } from './data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatTabsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new Headers({ 'Content-Type': 'application/json' })\n};\nconst apiUrl = '/api';\n@Injectable()\nexport class DataService {\n  result: any;\n  constructor(private http: Http) { }\n  getData(): Observable<any> {\n    return this.http.get(apiUrl).pipe(map(result => this.result = result.json()));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}